--- xalan-b/xalan-j_2_7_2/build.xml	2021-09-13 17:07:13.000000000 +0900
+++ xalan-a/xalan-j_2_7_2/build.xml	2021-09-13 17:07:34.000000000 +0900
@@ -19,39 +19,39 @@
 <!-- ===================================================================
 
    Build file for Xalan-J 2.x - for use with the Jakarta Ant java build tool
-   
-Setup instructions: 
+
+Setup instructions:
    Before running an Ant build, you must
-   
+
      - set the JAVA_HOME environment variable to the JDK root directory
      - To build 'servlet' sample: Include Servlet SDK in your classpath
      - To build docs/javadocs/xsltc: use JDK 1.2.x or higher
-   
-Build Instructions:   
+
+Build Instructions:
   To build, run
     build.bat (win32) or build.sh (unix) [antoptions] [targets]
-  in the directory where this file is located; you should also be 
+  in the directory where this file is located; you should also be
   able to use an installation of Ant v1.4.1 or later.
-   
+
   build -projecthelp  will show a list of supported targets.
-   
+
   Developers: include a description="" attribute in all user-callable targets.
-        
-  If you build a target that depends on other targets, those other 
-  targets are *usually* created in the correct order; however a 
+
+  If you build a target that depends on other targets, those other
+  targets are *usually* created in the correct order; however a
   few of the larger targets like dist do not list all dependencies.
 
 Other Important Notes:
-- 'dist' produces a .tar file that works with GNU compatible tar 
-  programs, because that's what Ant does when it finds a path that's 
+- 'dist' produces a .tar file that works with GNU compatible tar
+  programs, because that's what Ant does when it finds a path that's
   longer than 100 characters (like in our docs).  Sorry!
-  
-- External build maintainers: look for GUMP: comments; developers 
+
+- External build maintainers: look for GUMP: comments; developers
   please use great caution when changing these lines!
 
-- Unusual build items: the docs and xsltc.compile targets leave 
+- Unusual build items: the docs and xsltc.compile targets leave
   cruft in the source areas; various clean targets get most of this.
-  
+
 Authors:
   Shane Curcuru <shane_curcuru@lotus.com>
   Don Leslie <donald_leslie@lotus.com>
@@ -64,8 +64,8 @@
   <property name="name"                   value="xalan"/>
   <property name="year"                   value="2014"/>
   <property name="build.debug"            value="on"/>
-  <property name="compiler.target"        value="1.3"/>
-  <property name="compiler.source"        value="1.3"/>
+  <property name="compiler.target"        value="1.8"/>
+  <property name="compiler.source"        value="1.8"/>
 
   <!-- Xalan Java version information -->
   <property name="version.VERSION"        value="2"/>
@@ -74,28 +74,28 @@
   <property name="version.MINOR"          value="2"/><!-- EITHER the developer release number, or a maintenance release number -->
   <property name="version"                value="${version.VERSION}_${version.RELEASE}_${version.DEVELOPER}${version.MINOR}"/><!-- GUMP: version # of dist file -->
   <property name="impl.version"           value="${version.VERSION}.${version.RELEASE}.${version.DEVELOPER}${version.MINOR}"/><!-- Used in jar task for filtering MANIFEST.MF file -->
-  
+
   <!-- Xerces Java version information -->
   <property name="parser.version.VERSION" value="2"/>
   <property name="parser.version.RELEASE" value="11"/>
-  <property name="parser.version.MINOR"   value="0"/> 
-  
-  <!-- Xalan Java directories -->  
+  <property name="parser.version.MINOR"   value="0"/>
+
+  <!-- Xalan Java directories -->
   <!--  <property name="bin.dir"                value="./bin"/> -->
-  <property name="build.dir"              value="./build"/> 
-  <property name="lib.dir"                value="./lib"/>   
-  <property name="endorsed.dir"           value="${lib.dir}/endorsed"/>   
-  <property name="samples.dir"            value="./samples"/>   
-  <property name="src.dir"                value="./src"/>  
-  <property name="tools.dir"              value="./tools"/> 
+  <property name="build.dir"              value="./build"/>
+  <property name="lib.dir"                value="./lib"/>
+  <property name="endorsed.dir"           value="${lib.dir}/endorsed"/>
+  <property name="samples.dir"            value="./samples"/>
+  <property name="src.dir"                value="./src"/>
+  <property name="tools.dir"              value="./tools"/>
   <property name="xdocs.dir"              value="./xdocs"/>
-    
+
   <property name="apachexml.reldir"       value="org/apache/xml"/>
   <property name="serializer.reldir"      value="org/apache/xml/serializer"/>
   <property name="xpath.reldir"           value="org/apache/xpath"/>
   <property name="xalan.reldir"           value="org/apache/xalan"/>
   <property name="domxpath.reldir"        value="org/w3c/dom/xpath"/>
-  <property name="xsltc.reldir"           value="${xalan.reldir}/xsltc"/>  
+  <property name="xsltc.reldir"           value="${xalan.reldir}/xsltc"/>
 
   <!-- Jars to run Xalan Java (Interpretive, Compiled, or both) -->
   <property name="xmlapis.jar.name"       value="xml-apis.jar"/>
@@ -108,12 +108,12 @@
   <property name="runtime.jar"            value="${lib.dir}/${runtime.jar.name}"/>
   <property name="regexp.jar.name"        value="regexp.jar"/>
   <property name="regexp.jar"             value="${lib.dir}/${regexp.jar.name}"/>
-  
+
   <!-- Jars to build Xalan Java (Interpretive, Compiled, or both) or build the docs -->
   <property name="java_cup.jar.name"      value="java_cup.jar"/>
   <property name="java_cup.jar"           value="${tools.dir}/${java_cup.jar.name}"/>
   <property name="jlex.jar.name"          value="JLex.jar"/>
-  <property name="jlex.jar"               value="${tools.dir}/${jlex.jar.name}"/>  
+  <property name="jlex.jar"               value="${tools.dir}/${jlex.jar.name}"/>
   <property name="stylebook.jar.name"     value="stylebook-1.0-b3_xalan-2.jar"/>
   <property name="stylebook.jar"          value="${tools.dir}/${stylebook.jar.name}"/>
   <property name="doclet.jar.name"        value="xalan2jdoc.jar"/>
@@ -128,16 +128,16 @@
   <property name="javaee-api.jar"         value="${lib.dir}/${javaee-api.jar.name}"/>
   <property name="brazil.jar.name"        value="brazil-2.1.jar"/>
   <property name="brazil.jar"             value="${lib.dir}/${brazil.jar.name}"/>
- 
+
   <!-- Relative locations of source directories -->
   <property name="manifest.mf"            value="./src/MANIFEST.MF"/>
   <property name="manifest.xsltc.mf"      value="./src/manifest.xsltc"/>
-  <property name="manifest.xalan-interpretive.mf" value="./src/manifest.xalan-interpretive"/>  
-  <property name="XSLTInfo.props"         value="./src/org/apache/xalan/res/XSLTInfo.properties"/>  
+  <property name="manifest.xalan-interpretive.mf" value="./src/manifest.xalan-interpretive"/>
+  <property name="XSLTInfo.props"         value="./src/org/apache/xalan/res/XSLTInfo.properties"/>
   <property name="generated.xpathparser"  value="${src.dir}/${xsltc.reldir}/compiler/XPathParser.java"/>
   <property name="generated.xpathlexer"   value="${src.dir}/${xsltc.reldir}/compiler/XPathLexer.java"/>
   <property name="generated.xpathsym"     value="${src.dir}/${xsltc.reldir}/compiler/sym.java"/>
-  
+
   <!-- Build and distribution output areas -->
   <property name="build.xalan.jar"              value="${build.dir}/${name}.jar"/><!-- GUMP: actual path/name of jar target output -->
   <property name="build.xalan-unbundled.jar"    value="${build.dir}/${name}-unbundled.jar"/>
@@ -151,22 +151,22 @@
   <property name="dist.pkg"                     value="${name}-j_${version}"/><!-- GUMP: actual path/name of dist target .tar.gz/.zip-->
   <property name="dist.file"                    value="${dist.pkg}"/>
   <property name="dist.dir"                     value="${build.dir}/${dist.pkg}"/>
-  
-  <!-- xml-commons sources (for Javadoc) -->                                                                        
+
+  <!-- xml-commons sources (for Javadoc) -->
   <property name="xml-commons-srcs.tar.gz"      value="${src.dir}/xml-commons-external-1.3.02-src.tar.gz"/>
   <property name="xml-commons-srcs.tar"         value="${build.dir}/xml-commons-external-1.3.02-src.tar"/>
- 
+
   <!-- Documentation and samples information  -->
   <property name="Name-in-docs"                 value="Xalan-Java"/>
   <property name="version.file"                 value="${xalan.reldir}/processor/XSLProcessorVersion.java"/>
-  
+
   <property name="build.samples.jar"            value="${build.dir}/xalansamples.jar"/>
   <property name="build.servlet.war"            value="${build.dir}/xalanservlet.war"/>
   <property name="build.xsltc.applet.jar"       value="${build.dir}/xsltcapplet.jar"/>
   <property name="build.xsltc.brazil.jar"       value="${build.dir}/xsltcbrazil.jar"/>
   <property name="build.xsltc.ejb.jar"          value="${build.dir}/xsltcejb.jar"/>
   <property name="build.xsltc.servlet.jar"      value="${build.dir}/xsltcservlet.jar"/>
-  
+
   <property name="xdocs.book"                   value="${xdocs.dir}/sources/xalan-jlocal.xml"/>
   <property name="xdocs.style"                  value="${xdocs.dir}/style"/>
   <property name="xalanonly-styledocs"
@@ -175,36 +175,36 @@
   <property name="doc.generator"                value="org.apache.stylebook.StyleBook"/>
   <property name="doc.generator.styletargz"     value="${xdocs.dir}/xml-site-style.tar.gz"/>
   <property name="doc.generator.styletar"       value="${xdocs.dir}/xml-site-style.tar"/>
-  
+
   <property name="site.root"                    value="./xml-site"/>
   <property name="site.dir"                     value="${site.root}/target/xalan-j"/>
   <property name="site.book"                    value="${xdocs.dir}/sources/xalan-jsite.xml"/>
-  
+
   <property name="xalan.apache.org.site.root"   value="./xalan-apache-org-site"/>
   <property name="xalan.apache.org.site.dir"    value="${xalan.apache.org.site.root}/target/xalan-apache-org"/>
-  <property name="xalan.apache.org.site.book"   value="${xdocs.dir}/sources/xalan-apache-org-site.xml"/>  
-  
-  
+  <property name="xalan.apache.org.site.book"   value="${xdocs.dir}/sources/xalan-apache-org-site.xml"/>
+
+
   <property name="xdocs.DONE.file"              value="${xdocs.dir}/sources/xalan/DONE"/>
   <property name="xdocs.XSLTCDONE.file"         value="XSLTCDONE"/>
   <property name="xdocs.XSLTCDONE.location"     value="${xdocs.dir}/sources/xalan/${xdocs.XSLTCDONE.file}"/>
 
-      
-  <!-- PROPERTIES TO COMPILE THE SERIALIZER  ======================================= -->  
+
+  <!-- PROPERTIES TO COMPILE THE SERIALIZER  ======================================= -->
   <property name="serializer.src.dir"           value="./src"/>
-  <property name="serializer.build.dir"         value="./build"/> 
-  <property name="serializer.build.classes"     value="${serializer.build.dir}/serializer"/> 
-  
+  <property name="serializer.build.dir"         value="./build"/>
+  <property name="serializer.build.classes"     value="${serializer.build.dir}/serializer"/>
+
   <!-- PROPERTIES TO MAKE THE SERIALIZER JAR ======================================= -->
-  <property name="serializer.manifest.basename" value="MANIFEST.SERIALIZER"/> 
+  <property name="serializer.manifest.basename" value="MANIFEST.SERIALIZER"/>
   <property name="serializer.manifest"          value="${serializer.src.dir}/${serializer.manifest.basename}"/>
   <property name="serializer.impl.version"      value="${impl.version}"/>
   <property name="serializer.java.version"      value="${java.version}"/>
   <property name="serializer.java.vendor"       value="${java.vendor}"/>
-  <property name="serializer.jar.name"          value="serializer.jar"/>   
-  <property name="build.serializer.jar"         value="${serializer.build.dir}/${serializer.jar.name}"/> 
-  <property name="lib.serializer.jar"           value="./lib/${serializer.jar.name}"/>   
- 
+  <property name="serializer.jar.name"          value="serializer.jar"/>
+  <property name="build.serializer.jar"         value="${serializer.build.dir}/${serializer.jar.name}"/>
+  <property name="lib.serializer.jar"           value="./lib/${serializer.jar.name}"/>
+
   <!-- Class paths used in various targets -->
   <path id="docs.class.path">
     <pathelement location="${xmlapis.jar}" />
@@ -220,15 +220,15 @@
   </path>
   <path id="samples.class.path">
     <pathelement location="${xmlapis.jar}" />
-    <pathelement location="${build.serializer.jar}" />    
-    <pathelement location="${parser.jar}" />  
+    <pathelement location="${build.serializer.jar}" />
+    <pathelement location="${parser.jar}" />
     <pathelement location="${build.xalan.jar}" />
     <pathelement path="${java.class.path}" />
   </path>
   <path id="compile.class.path">
     <!-- Ensure the selected parser.jar file is used to compile against -->
     <pathelement location="${build.classes}" />
-    <pathelement location="${serializer.build.classes}" />    
+    <pathelement location="${serializer.build.classes}" />
     <pathelement location="${xmlapis.jar}" />
     <pathelement location="${build.serializer.jar}" />
     <pathelement location="${parser.jar}" />
@@ -242,8 +242,8 @@
     <pathelement location="${build.classes}" />
     <pathelement location="${serializer.build.classes}" />
     <pathelement location="${xmlapis.jar}" />
-    <pathelement location="${build.serializer.jar}" />    
-    <pathelement location="${parser.jar}" />   
+    <pathelement location="${build.serializer.jar}" />
+    <pathelement location="${parser.jar}" />
     <pathelement path="${build.boot.class.path}" />
     <pathelement path="${sun.boot.class.path}" />
   </path>
@@ -258,11 +258,11 @@
     <include name="${dist.file}/readme.html"/>
     <include name="${dist.file}/xalan.jar"/>
     <!-- xsltc.jar will only be picked up if it has been built -->
-    <include name="${dist.file}/xsltc.jar"/>     
+    <include name="${dist.file}/xsltc.jar"/>
     <include name="${dist.file}/${xmlapis.jar.name}"/>
     <include name="${dist.file}/${parser.jar.name}"/>
     <include name="${dist.file}/${serializer.jar.name}"/>
-    <include name="${dist.file}/samples/"/>    
+    <include name="${dist.file}/samples/"/>
     <include name="${dist.file}/samples/xalansamples.jar"/>
     <include name="${dist.file}/samples/xalanservlet.war"/>
     <include name="${dist.file}/samples/xsltcapplet.jar"/>
@@ -277,11 +277,11 @@
     <include name="${dist.file}/readme.html"/>
     <include name="${dist.file}/xalan.jar"/>
     <!-- xsltc.jar will only be picked up if it has been built -->
-    <include name="${dist.file}/xsltc.jar"/>    
+    <include name="${dist.file}/xsltc.jar"/>
     <include name="${dist.file}/${xmlapis.jar.name}"/>
     <include name="${dist.file}/${parser.jar.name}"/>
     <include name="${dist.file}/${serializer.jar.name}"/>
-    <include name="${dist.file}/samples/"/>        
+    <include name="${dist.file}/samples/"/>
     <include name="${dist.file}/samples/xalansamples.jar"/>
     <include name="${dist.file}/samples/xalanservlet.war"/>
     <include name="${dist.file}/samples/xsltcapplet.jar"/>
@@ -291,11 +291,11 @@
   </patternset>
   <patternset id="src-distro" >
     <include name="${dist.file}/LICENSE.txt"/>
-    <include name="${dist.file}/NOTICE.txt"/>      
+    <include name="${dist.file}/NOTICE.txt"/>
     <include name="${dist.file}/build.*"/>
     <include name="${dist.file}/commits.xml"/>
     <include name="${dist.file}/KEYS"/>
-    <include name="${dist.file}/readme.html"/>  
+    <include name="${dist.file}/readme.html"/>
     <include name="${dist.file}/lib/"/>
     <include name="${dist.file}/tools/"/>
     <include name="${dist.file}/samples/"/>
@@ -304,12 +304,12 @@
     <exclude name="${dist.file}/samples/xsltcapplet.jar"/>
     <exclude name="${dist.file}/samples/xsltcbrazil.jar"/>
     <exclude name="${dist.file}/samples/xsltcejb.jar"/>
-    <exclude name="${dist.file}/samples/xsltcservlet.jar"/>    
+    <exclude name="${dist.file}/samples/xsltcservlet.jar"/>
     <include name="${dist.file}/src/"/>
     <include name="${dist.file}/xdocs/"/>
   </patternset>
 
-  <!-- XSLTC engine dependency .jar files -->    
+  <!-- XSLTC engine dependency .jar files -->
   <patternset id="xsltc-deps-jars" >
     <include name="${dist.file}/lib/${bcel.jar.name}"/>
     <include name="${dist.file}/tools/${java_cup.jar.name}"/>
@@ -325,35 +325,35 @@
     <echo message="Project:${Name-in-docs} version:${version} build.xml $Revision: 1581694 $"/>
     <mkdir dir="${build.dir}"/>
     <mkdir dir="${build.classes}"/>
-    <!-- Note that all testing-related targets *must* depend on 
-         this target, either directly or indirectly, to get 
+    <!-- Note that all testing-related targets *must* depend on
+         this target, either directly or indirectly, to get
          the tests-available property set for them.
     -->
     <available file="${test.relpath}" property="tests-available" />
-    <available property="xerces.present" 
+    <available property="xerces.present"
       classname="org.apache.xerces.parsers.SAXParser"/>
-      
+
     <!-- Update version information.  This copies the Version.src
          file into Version.java, while replacing the following tokens
     -->
-    <filter token="version.VERSION"          value="${version.VERSION}"/>  
+    <filter token="version.VERSION"          value="${version.VERSION}"/>
     <filter token="version.RELEASE"          value="${version.RELEASE}"/>
     <filter token="version.MINOR"            value="${version.MINOR}"/>
-    <filter token="version.DEVELOPER"        value="${version.DEVELOPER}"/> 
-    <filter token="parser.version.VERSION"   value="${parser.version.VERSION}"/>  
+    <filter token="version.DEVELOPER"        value="${version.DEVELOPER}"/>
+    <filter token="parser.version.VERSION"   value="${parser.version.VERSION}"/>
     <filter token="parser.version.RELEASE"   value="${parser.version.RELEASE}"/>
-    <filter token="parser.version.MINOR"     value="${parser.version.MINOR}"/>    
+    <filter token="parser.version.MINOR"     value="${parser.version.MINOR}"/>
     <copy tofile="${src.dir}/${xalan.reldir}/Version.java" file="${src.dir}/${xalan.reldir}/Version.src" filtering="true"/>
-    <copy tofile="${src.dir}/${xalan.reldir}/processor/XSLProcessorVersion.java" file="${src.dir}/${xalan.reldir}/processor/XSLProcessorVersion.src" filtering="true"/>    
+    <copy tofile="${src.dir}/${xalan.reldir}/processor/XSLProcessorVersion.java" file="${src.dir}/${xalan.reldir}/processor/XSLProcessorVersion.src" filtering="true"/>
     <copy tofile="${src.dir}/${serializer.reldir}/Version.java" file="${src.dir}/${serializer.reldir}/Version.src" filtering="true"/>
     <copy tofile="${xdocs.dir}/sources/entities.ent" file="${xdocs.dir}/sources/entities.src" filtering="true"/>
   </target>
 
   <!-- Must depend on jar since we use Xalan to process xml files -->
   <target name="prepare.docs" depends="jar,prepare.docs.nojardepends"/>
-  
-  <target name="prepare.docs.nojardepends">  
-    <mkdir dir="${build.docs}"/> 
+
+  <target name="prepare.docs.nojardepends">
+    <mkdir dir="${build.docs}"/>
     <mkdir dir="${build.apidocs}"/>
 
     <gunzip src="${doc.generator.styletargz}"/>
@@ -361,8 +361,8 @@
     <delete file="${doc.generator.styletar}"/>
 
     <!-- We use a sed script to extract Xalan-Java 2 commits from the repository into commits.xml
-         The following operation transforms commits.xml (just including source code commits) and 
-         puts the result in xdocs/sources/xalan for inclusion in the readme.xml -->      
+         The following operation transforms commits.xml (just including source code commits) and
+         puts the result in xdocs/sources/xalan for inclusion in the readme.xml -->
     <echo message="Transform commits.xml and put the result in ${xdocs.dir}"/>
     <java fork="yes" classname="${xalan.cmdline.class}" >
       <classpath refid="docs.class.path" />
@@ -383,35 +383,35 @@
     <echo message="Compiling DTM implementation and utilities" />
     <javac srcdir="${src.dir}"
            destdir="${build.classes}"
-           debug="${build.debug}" 
+           debug="${build.debug}"
     	   target="${compiler.target}" source="${compiler.source}">
       <include name="${apachexml.reldir}/**/*.java" />
       <!-- exclude the serializer -->
-      <exclude name="${serializer.reldir}/**/*.java" />      
+      <exclude name="${serializer.reldir}/**/*.java" />
       <!-- Exclude file that depends upon presence of Xerces in build path -->
-      <exclude name="**/IncrementalSAXSource_Xerces.java" 
+      <exclude name="**/IncrementalSAXSource_Xerces.java"
         unless="xerces.present"	 />
       <classpath refid="compile.class.path" />
       <bootclasspath refid="xslt.boot.class.path" />
     </javac>
     <!-- Copy needed properties, resource, etc. files to be put into .jar file -->
     <copy todir="${build.classes}">
-      <fileset dir="${src.dir}" 
-          includes="${apachexml.reldir}/**/*.properties" 
+      <fileset dir="${src.dir}"
+          includes="${apachexml.reldir}/**/*.properties"
           excludes="${serializer.reldir}/**/*.properties"
       />
-    </copy>  
+    </copy>
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Compile the Xalan interpreter source tree                           -->
   <!-- =================================================================== -->
   <target name="xalan-interpretive.compile" depends="xml.compile"
     description="Compile the Xalan interpretive classes (skips XSLTC)" >
     <echo message="Compiling Xalan interpretive classes" />
-    <javac srcdir="${src.dir}" 
+    <javac srcdir="${src.dir}"
            destdir="${build.classes}"
-           debug="${build.debug}" 
+           debug="${build.debug}"
     	   target="${compiler.target}" source="${compiler.source}">
       <include name="${xpath.reldir}/**/*.java" />
       <include name="${domxpath.reldir}/**/*.java" />
@@ -424,11 +424,11 @@
     <!-- Copy needed properties, resource, etc. files to be put into .jar file -->
     <copy todir="${build.classes}">
       <fileset dir="${src.dir}" includes="**/*.properties,META-INF/services/*" excludes="**/XSLTInfo.properties"/>
-    </copy>  
+    </copy>
     <filter token="impl.version" value="${impl.version}"/>
     <copy todir="${build.classes}/org/apache/xalan/res" file="${XSLTInfo.props}" filtering="true"/>
   </target>
-  
+
   <!-- Compile all java sources (Xalan interpretive and XSLTC) -->
   <target name="compile" depends="xalan-interpretive.compile,xsltc.compile"
     description="Compile all java source files (Xalan interpretive + XSLTC)" >
@@ -444,7 +444,7 @@
     <pathelement location="${jlex.jar}" />
     <pathelement location="${java_cup.jar}" />
     <pathelement location="${runtime.jar}" />
-    <!-- build.classes needed for 
+    <!-- build.classes needed for
          org.apache.xalan.xsltc.util.JavaCupRedirect -->
     <pathelement location="${build.classes}" />
     <pathelement path="${java.class.path}" />
@@ -452,10 +452,10 @@
 
   <!-- Attempt to determine dependency info for generated sources -->
   <target name="xsltc.prepare" depends="prepare" >
-    <!-- The first step compiles the utils directory, which includes 
+    <!-- The first step compiles the utils directory, which includes
          a special wrapper for the xsltc.codegen / java_cup step next. -->
     <echo message="Compiling XSLTC utilities"/>
-    <javac srcdir="${src.dir}" 
+    <javac srcdir="${src.dir}"
            destdir="${build.classes}"
            includes="${xsltc.reldir}/util/**/*.java"
            debug="${build.debug}"
@@ -463,8 +463,8 @@
       <classpath refid="xsltc.class.path" />
       <bootclasspath refid="xslt.boot.class.path" />
     </javac>
-    <!-- These tricky uptodate statements hopefully determine if we 
-         actually need to generate the java_cup and jlex files 
+    <!-- These tricky uptodate statements hopefully determine if we
+         actually need to generate the java_cup and jlex files
          in the two sub-targets below
     -->
     <uptodate property="xsltc.java_cup.not_needed" targetfile="${generated.xpathparser}" >
@@ -473,8 +473,8 @@
 
     <uptodate property="xsltc.jlex.not_needed" targetfile="${generated.xpathlexer}" >
       <srcfiles dir="${src.dir}/${xsltc.reldir}/compiler" includes="xpath.lex" />
-    </uptodate> 
-    
+    </uptodate>
+
     <!-- Determine whether the support jars are already expanded -->
     <available file="${build.classes}/org/apache/bcel"     type="dir" property="xsltc.bcel_jar.not_needed" />
     <available file="${build.classes}/JLex"                type="dir" property="xsltc.jlex_jar.not_needed" />
@@ -487,20 +487,20 @@
   <target name="xsltc.java_cup" depends="xsltc.prepare" unless="xsltc.java_cup.not_needed">
     <!-- The second step generates sym.java and XPathParser.java. -->
     <echo message="java_cup preparsing"/>
-    <java fork="yes" failonerror="true" 
+    <java fork="yes" failonerror="true"
        classname="org.apache.xalan.xsltc.util.JavaCupRedirect" >
       <classpath refid="xsltc.class.path" />
       <!-- need to bootclasspath java_cup for JDKs that include JavaCupRedirect -->
       <jvmarg value="-Xbootclasspath/p:${java_cup.jar}${path.separator}${runtime.jar}"/>
       <!-- We're using JavaCupRedirect to call the java_cup application -->
-      <arg line="-parser XPathParser -expect 0 
+      <arg line="-parser XPathParser -expect 0
          -stdin ${src.dir}/${xsltc.reldir}/compiler/xpath.cup"/>
     </java>
     <echo message="java_cup move output files"/>
     <move file="XPathParser.java" tofile="${generated.xpathparser}"/>
     <move file="sym.java" tofile="${generated.xpathsym}"/>
   </target>
-  
+
   <!-- Generate the XPath lexer sources for xsltc if needed -->
   <target name="xsltc.jlex" depends="xsltc.java_cup" unless="xsltc.jlex.not_needed">
     <!-- The third step generates XPathLexer.java. The lexiographical analyser
@@ -518,12 +518,12 @@
   <target name="xsltc.compile" depends="xsltc.java_cup,xsltc.jlex,xml.compile"
     description="Compile just the XSLTC classes" >
     <echo message="Compiling remaining XSLTC classes"/>
-    <javac srcdir="${src.dir}" 
+    <javac srcdir="${src.dir}"
            destdir="${build.classes}"
            includes="${xsltc.reldir}/**/*.java"
            excludes="${serializer.reldir}/**/*.java"
            debug="${build.debug}"
-    	   target="${compiler.target}" source="${compiler.source}"> 
+    	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="xsltc.class.path" />
       <bootclasspath refid="xslt.boot.class.path" />
     </javac>
@@ -533,7 +533,7 @@
   <target name="xsltc.fcompile" depends="xml.compile"
     description="Compile just the XSLTC classes w/o JLex, JCup recompilation" >
     <echo message="Compiling remaining XSLTC classes"/>
-    <javac srcdir="${src.dir}" 
+    <javac srcdir="${src.dir}"
            destdir="${build.classes}"
            includes="${xsltc.reldir}/**/*.java"
            debug="${build.debug}"
@@ -549,7 +549,7 @@
     <!-- Copy over the manifest, with filtering (for version number) -->
     <filter token="impl.version" value="${impl.version}"/>
     <filter token="java.version" value="${java.version}"/>
-    <filter token="java.vendor" value="${java.vendor}"/>        
+    <filter token="java.vendor" value="${java.vendor}"/>
     <copy todir="${build.dir}" file="${manifest.xsltc.mf}" filtering="true"/>
     <jar jarfile="${build.xsltc.jar}" manifest="${build.dir}/manifest.xsltc" basedir="${build.classes}" >
       <patternset><!-- relative to jar/@basedir -->
@@ -568,14 +568,14 @@
   <target name="xsltc.copy-deps-jar" unless="${param_unless}">
     <!-- copy the jar file to the build/classes directory -->
     <copy todir="${build.classes}" file="${lib.dir}/${param_jar_name}"/>
-    
+
     <!-- unjar the jar file -->
     <unjar src="${build.classes}/${param_jar_name}" dest="${build.classes}" />
-    
+
     <!-- remove the jar file -->
     <delete file="${build.classes}/${param_jar_name}" />
   </target>
-  
+
   <!-- Copy and expand the XSLTC support jars if needed -->
   <target name="xsltc.copy-deps-jars" depends="xsltc.copy-licenses">
     <echo message="Copying XSLTC support jars" />
@@ -587,7 +587,7 @@
 
 <!-- We don't need to package the JLex or java_cup jars in the xalan.jar.
      These are only required for building XSLTC, not for using XSLTC.
-     
+
     <antcall target="xsltc.copy-deps-jar">
       <param name="param_unless" value="xsltc.jlex_jar.not_needed" />
       <param name="param_jar_name" value="${jlex.jar.name}" />
@@ -608,9 +608,9 @@
       <param name="param_unless" value="xsltc.regexp_jar.not_needed" />
       <param name="param_jar_name" value="${regexp.jar.name}" />
     </antcall>
-    
+
     <!-- remove the old META-INF/MANIFEST.MF file -->
-    <delete file="${build.classes}/META-INF/MANIFEST.MF" quiet="true"/>  
+    <delete file="${build.classes}/META-INF/MANIFEST.MF" quiet="true"/>
   </target>
 
   <!-- =================================================================== -->
@@ -632,16 +632,16 @@
     <!-- Copy over the manifest, with filtering (for version number) -->
     <filter token="impl.version" value="${impl.version}"/>
     <filter token="java.version" value="${java.version}"/>
-    <filter token="java.vendor" value="${java.vendor}"/>     
+    <filter token="java.vendor" value="${java.vendor}"/>
     <copy todir="${build.dir}" file="${manifest.xsltc.mf}" filtering="true"/>
-    
+
     <!-- make bundled jar named xsltc.jar -->
     <jar jarfile="${build.dir}/xsltc.jar" manifest="${build.dir}/manifest.xsltc" >
       <fileset dir="${build.classes}">
         <include name="org/apache/xalan/xsltc/**"/>
         <exclude name="org/apache/xalan/xsltc/util/JavaCupRedirect*" />
       </fileset>
-      <fileset dir="${build.classes}" includes="org/apache/xml/**" 
+      <fileset dir="${build.classes}" includes="org/apache/xml/**"
                                       excludes="${serializer.reldir}/**" />
       <fileset dir="${build.classes}" includes="org/apache/bcel/**" />
       <fileset dir="${build.classes}" includes="JLex/**" />
@@ -650,7 +650,7 @@
     </jar>
 
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Creates the xalan interpretive jar                                  -->
   <!-- =================================================================== -->
@@ -659,21 +659,21 @@
     <!-- Copy over the manifest, with filtering (for version number) -->
     <filter token="impl.version" value="${impl.version}"/>
     <filter token="java.version" value="${java.version}"/>
-    <filter token="java.vendor" value="${java.vendor}"/>     
+    <filter token="java.vendor" value="${java.vendor}"/>
     <copy todir="${build.dir}" file="${manifest.xalan-interpretive.mf}" filtering="true"/>
     <jar jarfile="${build.xalan-interpretive.jar}" manifest="${build.dir}/manifest.xalan-interpretive" basedir="${build.classes}" >
       <patternset><!-- relative to jar/@basedir -->
         <include name="${apachexml.reldir}/**/*" />
         <include name="${xpath.reldir}/**/*" />
         <include name="${xalan.reldir}/**/*" />
-        <include name="${domxpath.reldir}/**/*" />        
+        <include name="${domxpath.reldir}/**/*" />
         <include name="META-INF/services/*" />
         <exclude name="${xsltc.reldir}/**/*" />
         <exclude name="${serializer.reldir}/**/*" />
       </patternset>
     </jar>
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Creates the xalan unbundled jar (Xalan interpretive + XSLTC -       -->
   <!-- support jars                                                        -->
@@ -682,7 +682,7 @@
     description="Jar up Xalan and XSLTC, without the XSLTC dependencies" >
     <filter token="impl.version" value="${impl.version}"/>
     <filter token="java.version" value="${java.version}"/>
-    <filter token="java.vendor" value="${java.vendor}"/>     
+    <filter token="java.vendor" value="${java.vendor}"/>
     <copy todir="${build.dir}" file="${manifest.mf}" filtering="true"/>
     <jar jarfile="${build.xalan-unbundled.jar}" manifest="${build.dir}/MANIFEST.MF" basedir="${build.classes}" >
       <patternset>
@@ -692,22 +692,22 @@
         <include name="META-INF/services/*" />
         <exclude name="${xsltc.reldir}/util/JavaCupRedirect*" />
         <exclude name="${serializer.reldir}/**/*.*" />
-      </patternset>    
+      </patternset>
     </jar>
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Creates one big xalan jar (Xalan interpretive + XSLTC + support jars) -->
   <!-- =================================================================== -->
   <target name="jar" depends="xalan-interpretive.compile,xsltc.compile,xsltc.copy-deps-jars"
     description="Jar up everything (Xalan, XSLTC and XSLTC dependencies)" >
-    
+
     <!-- Copy over the manifest, with filtering (for version number) -->
     <filter token="impl.version" value="${impl.version}"/>
     <filter token="java.version" value="${java.version}"/>
-    <filter token="java.vendor" value="${java.vendor}"/>     
+    <filter token="java.vendor" value="${java.vendor}"/>
     <copy todir="${build.dir}" file="${manifest.mf}" filtering="true"/>
-    
+
     <!-- make bundled jar named xalan.jar -->
     <jar jarfile="${build.xalan.jar}" manifest="${build.dir}/MANIFEST.MF"
          basedir="${build.classes}" >
@@ -715,19 +715,19 @@
          <exclude name="${xsltc.reldir}/util/JavaCupRedirect*" />
          <exclude name="${serializer.reldir}/**/*" />
        </patternset>
-    </jar>  
- 
+    </jar>
+
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Default all target simply Creates the xalan JAR                     -->
   <!-- =================================================================== -->
   <target name="all" depends="serializer.jar,jar"><!-- 'Standardizing build.xml files' <bloritsch@apache.org> -->
     <echo message="Redirect to jar target; please provide input on desired functionality of this target"/>
   </target>
-  
+
   <!-- =================================================================== -->
-  <!-- Compiles the samples (servlet excluded) and jars the class files    -->  
+  <!-- Compiles the samples (servlet excluded) and jars the class files    -->
   <!-- =================================================================== -->
   <target name="samples" depends="jar,samples.nojardepends,xsltc.samples"/>
 
@@ -735,96 +735,96 @@
     description="Compile and jar the samples (except servlet)" >
     <property name="exclude" value="*.xml,*.xsl,*.txt,*.html,*.properties,*.out"/>
     <mkdir dir="${build.samples}"/>
-    <!-- Since the samples are packageless, they must be compiled separately. -->   
-    <javac srcdir="${samples.dir}/SimpleTransform" 
+    <!-- Since the samples are packageless, they must be compiled separately. -->
+    <javac srcdir="${samples.dir}/SimpleTransform"
            destdir="${build.samples}"  excludes="${exclude}"
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/UseStylesheetPI"   
+    </javac>
+    <javac srcdir="${samples.dir}/UseStylesheetPI"
            destdir="${build.samples}"  excludes="${exclude}"
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/UseStylesheetParam" 
+    </javac>
+    <javac srcdir="${samples.dir}/UseStylesheetParam"
            destdir="${build.samples}"  excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/SAX2SAX"  
+    </javac>
+    <javac srcdir="${samples.dir}/SAX2SAX"
            destdir="${build.samples}"  excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/DOM2DOM"  
+    </javac>
+    <javac srcdir="${samples.dir}/DOM2DOM"
            destdir="${build.samples}"  excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/Pipe"  
+    </javac>
+    <javac srcdir="${samples.dir}/Pipe"
            destdir="${build.samples}"  excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path" >
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/UseXMLFilters"  
+    </javac>
+    <javac srcdir="${samples.dir}/UseXMLFilters"
            destdir="${build.samples}"  excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/Trace"   
+    </javac>
+    <javac srcdir="${samples.dir}/Trace"
            destdir="${build.samples}"  excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/ApplyXPath"  
-           destdir="${build.samples}" excludes="${exclude}" 
+    </javac>
+    <javac srcdir="${samples.dir}/ApplyXPath"
+           destdir="${build.samples}" excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
     </javac>
-    <javac srcdir="${samples.dir}/ApplyXPathDOM"  
-           destdir="${build.samples}" excludes="${exclude}" 
+    <javac srcdir="${samples.dir}/ApplyXPathDOM"
+           destdir="${build.samples}" excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>             
-    <javac srcdir="${samples.dir}/trax"  
-           destdir="${build.samples}" excludes="${exclude}" 
+    </javac>
+    <javac srcdir="${samples.dir}/trax"
+           destdir="${build.samples}" excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/extensions"  
-           destdir="${build.samples}" excludes="${exclude}" 
+    </javac>
+    <javac srcdir="${samples.dir}/extensions"
+           destdir="${build.samples}" excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>           
-    <javac srcdir="${samples.dir}/Validate"  
-           destdir="${build.samples}" excludes="${exclude}" 
+    </javac>
+    <javac srcdir="${samples.dir}/Validate"
+           destdir="${build.samples}" excludes="${exclude}"
            debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac> 
-    <javac srcdir="${samples.dir}/TransformThread"  
-           destdir="${build.samples}" excludes="${exclude}" 
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+    </javac>
+    <javac srcdir="${samples.dir}/TransformThread"
+           destdir="${build.samples}" excludes="${exclude}"
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
     </javac>
-    <javac srcdir="${samples.dir}/XPathAPI"  
-           destdir="${build.samples}" excludes="${exclude}" 
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+    <javac srcdir="${samples.dir}/XPathAPI"
+           destdir="${build.samples}" excludes="${exclude}"
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
       <classpath refid="samples.class.path" />
-    </javac>               
+    </javac>
     <jar jarfile="${build.samples.jar}" basedir="${build.samples}"
          includes="*.class"/>
   </target>
@@ -835,7 +835,7 @@
   <!-- =================================================================== -->
   <target name="extra.std.samples"
           depends="servlet,xsltc.applet,xsltc.ejb,xsltc.servlet"/>
-          
+
   <target name="extra.std.samples.nojardepends"
           depends="servlet.jardepends,xsltc.applet.nojardepends,
                    xsltc.ejb.jardepends,xsltc.servlet.jardepends"/>
@@ -845,11 +845,11 @@
   <!-- order to compile.                                                   -->
   <!-- =================================================================== -->
   <target name="extra.nonstd.samples" depends="xsltc.brazil"/>
-  
+
   <target name="extra.nonstd.samples.nojardepends" depends="xsltc.brazil.jardepends"/>
 
   <!-- =================================================================== -->
-  <!-- Compiles the sample servlet and jars the class files.               --> 
+  <!-- Compiles the sample servlet and jars the class files.               -->
   <!-- The javax.servlet and javax.servlet.http packages                   -->
   <!-- must be on the classpath                                            -->
   <!-- =================================================================== -->
@@ -857,43 +857,43 @@
 
   <target name="servlet.jardepends"
     description="Compile and jar the servlet samples in xalanservlet.war" >
-     <echo message="To compile the sample servlets, javax.servlet and javax.servlet.http must be on the classpath"/>   
+     <echo message="To compile the sample servlets, javax.servlet and javax.servlet.http must be on the classpath"/>
      <mkdir dir="${build.servlet}"/>
      <mkdir dir="${build.servlet}/WEB-INF/classes/servlet"/>
      <mkdir dir="${build.servlet}/WEB-INF/lib"/>
      <javac srcdir="${samples.dir}/servlet"
             destdir="${build.servlet}/WEB-INF/classes"
             debug="${build.debug}"
-            bootclasspathref="xslt.boot.class.path" 
+            bootclasspathref="xslt.boot.class.path"
      	    target="${compiler.target}" source="${compiler.source}">
         <classpath refid="samples.class.path" />
         <classpath location="${servlet-api.jar}" />
-     </javac>           
+     </javac>
       <copy todir="${build.servlet}/WEB-INF/classes/servlet">
         <fileset dir="${samples.dir}/servlet" includes="media.properties"/>
-      </copy>  		         
+      </copy>
       <copy todir="${build.servlet}/WEB-INF">
         <fileset dir="${samples.dir}/servlet" includes="web.xml"/>
       </copy>
       <copy todir="${build.servlet}">
-        <fileset dir="${samples.dir}/servlet" 
-        		includes="birds.xml, birds.xsl, booklist1.xsl, 
+        <fileset dir="${samples.dir}/servlet"
+        		includes="birds.xml, birds.xsl, booklist1.xsl,
         		booklist2.xsl, catalog.xml, fooparam.xml, fooparam.xsl, jspSample.jsp"/>
       </copy>
       <copy todir="${build.servlet}/WEB-INF/lib">
       	<fileset dir="${lib.dir}" includes="${parser.jar.name}, ${xmlapis.jar.name}"/>
       </copy>
       <copy file="${build.xalan.jar}" todir="${build.servlet}/WEB-INF/lib" />
-    <jar jarfile="${build.servlet.war}" 
-         basedir="${build.servlet}" 
+    <jar jarfile="${build.servlet.war}"
+         basedir="${build.servlet}"
          includes="**"/>
   </target>
- 
+
   <!-- =================================================================== -->
   <!-- Compiles (does not jar) the translet samples.                       -->
   <!-- For time being, classes are generated in place.                     -->
   <!-- To run these samples, add xsltc.jar, runtime.jar, bcel.jar,         -->
-  <!-- and java_cup.jar (all in the bin directory) to the classpath        --> 
+  <!-- and java_cup.jar (all in the bin directory) to the classpath        -->
   <!--                                                                     -->
   <!-- When we have straightened out classpath issues,                     -->
   <!-- add samples in CompiledApplet, CompiledBrazil, CompiledEJB and      -->
@@ -904,18 +904,18 @@
   <target name="xsltc.samples.nojardepends">
     <mkdir dir="${build.samples}"/>
     <javac srcdir="${samples.dir}/translets"
-           classpath="${java.class.path}:${build.xalan.jar}" 
-           destdir="${build.samples}" excludes="${exclude}" 
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+           classpath="${java.class.path}:${build.xalan.jar}"
+           destdir="${build.samples}" excludes="${exclude}"
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
   	       target="${compiler.target}" source="${compiler.source}"/>
     <javac srcdir="${samples.dir}/CompiledJAXP"
            destdir="${build.samples}" excludes="${exclude}"
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
   	       target="${compiler.target}" source="${compiler.source}"/>
   </target>
 
   <!-- =================================================================== -->
-  <!-- Compiles the XSLTC applet example and jars the class files.         --> 
+  <!-- Compiles the XSLTC applet example and jars the class files.         -->
   <!-- =================================================================== -->
   <target name="xsltc.applet" depends="jar,xsltc.applet.nojardepends"/>
 
@@ -923,7 +923,7 @@
     <mkdir dir="${build.samples}/CompiledApplet"/>
     <javac srcdir="${samples.dir}/CompiledApplet"
            destdir="${build.samples}/CompiledApplet" excludes="${exclude}"
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}"/>
     <jar jarfile="${build.xsltc.applet.jar}"
          basedir="${build.samples}/CompiledApplet"
@@ -931,7 +931,7 @@
   </target>
 
   <!-- =================================================================== -->
-  <!-- Compiles the XSLTC brazil example and jars the class files.         --> 
+  <!-- Compiles the XSLTC brazil example and jars the class files.         -->
   <!-- =================================================================== -->
   <target name="xsltc.brazil" depends="jar,xsltc.brazil.jardepends"/>
 
@@ -939,7 +939,7 @@
     <mkdir dir="${build.samples}/CompiledBrazil"/>
     <javac srcdir="${samples.dir}/CompiledBrazil"
            destdir="${build.samples}/CompiledBrazil" excludes="${exclude}"
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
     	<classpath location="${brazil.jar}"/>
   	</javac>
@@ -949,7 +949,7 @@
   </target>
 
   <!-- =================================================================== -->
-  <!-- Compiles the XSLTC EJB example and jars the class files.            --> 
+  <!-- Compiles the XSLTC EJB example and jars the class files.            -->
   <!-- ejb.jar must be on the classpath to compile this sample.            -->
   <!-- EJB 2.0 can be found at http://java.sun.com/products/ejb/docs.html  -->
   <!-- =================================================================== -->
@@ -959,7 +959,7 @@
     <mkdir dir="${build.samples}/CompiledEJB"/>
     <javac srcdir="${samples.dir}/CompiledEJB"
            destdir="${build.samples}/CompiledEJB" excludes="${exclude}"
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
     	<classpath location="${javaee-api.jar}"/>
     </javac>
@@ -969,7 +969,7 @@
   </target>
 
   <!-- =================================================================== -->
-  <!-- Compiles the XSLTC servlet example and jars the class files.        --> 
+  <!-- Compiles the XSLTC servlet example and jars the class files.        -->
   <!-- =================================================================== -->
   <target name="xsltc.servlet" depends="jar,xsltc.servlet.jardepends" />
 
@@ -977,7 +977,7 @@
     <mkdir dir="${build.samples}/CompiledServlet"/>
     <javac srcdir="${samples.dir}/CompiledServlet"
            destdir="${build.samples}/CompiledServlet" excludes="${exclude}"
-           debug="${build.debug}" bootclasspathref="xslt.boot.class.path" 
+           debug="${build.debug}" bootclasspathref="xslt.boot.class.path"
     	   target="${compiler.target}" source="${compiler.source}">
     	<classpath location="${servlet-api.jar}"/>
     </javac>
@@ -986,60 +986,60 @@
          includes="*.class"/>
   </target>
 
- 
+
   <!-- =================================================================== -->
   <!-- Generate HTML docs                                                  -->
   <!-- =================================================================== -->
   <target name="docs" depends="jar,docs.nojardepends,xsltc.docs"/>
-  
-  <target name="docs.nojardepends" depends="prepare.docs.nojardepends,autodocs"  
+
+  <target name="docs.nojardepends" depends="prepare.docs.nojardepends,autodocs"
     description="Build the documentation (overview, readme, etc.)" >
-    <echo message="docs is human-usable target with dependencies"/>  
+    <echo message="docs is human-usable target with dependencies"/>
   </target>
-  
+
   <target name="autodocs">
-    <echo message="autodocs is for automated build process, without dependencies"/>   
-    <java fork="yes" 
-          classname="${doc.generator}" 
+    <echo message="autodocs is for automated build process, without dependencies"/>
+    <java fork="yes"
+          classname="${doc.generator}"
           classpathref="docs.class.path" >
        <arg line="targetDirectory=${build.docs} ${xdocs.book} ${xdocs.style}"/>
-    </java>	 
+    </java>
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Creates the API documentation                                       -->
   <!-- =================================================================== -->
   <target name="javadocs" depends="jar,javadocs.nojardepends"/>
-  
+
   <target name="javadocs.nojardepends" depends="prepare.docs.nojardepends,autojavadocs"
     description="Build the Javadocs for Xalan 2.x and jaxp sources" >
-    <echo message="javadocs is human-usable target with dependencies"/> 
-    
-    <!-- Expand jaxp sources (JAXP 1.1, DOM 2, and SAX 2) into source tree for 
-         inclusion in the Javadoc. -->           
-    <!-- Note this is into the src area.-->                                          
-    <gunzip src="${xml-commons-srcs.tar.gz}" dest="${build.dir}" />                                                                         
-    <untar src="${xml-commons-srcs.tar}" 
+    <echo message="javadocs is human-usable target with dependencies"/>
+
+    <!-- Expand jaxp sources (JAXP 1.1, DOM 2, and SAX 2) into source tree for
+         inclusion in the Javadoc. -->
+    <!-- Note this is into the src area.-->
+    <gunzip src="${xml-commons-srcs.tar.gz}" dest="${build.dir}" />
+    <untar src="${xml-commons-srcs.tar}"
            dest="${src.dir}">
        <patternset>
          <include name="**.java"/>
        </patternset>
     </untar>
-           
+
     <delete file="${xml-commons-srcs.tar}"/>
-         
+
     <antcall target="autojavadocs"/>
-     
+
     <!-- remove the jaxp sources -->
     <delete dir="${src.dir}/javax" />
     <delete dir="${src.dir}/org/w3c" />
     <delete dir="${src.dir}/org/xml" />
     <delete dir="${src.dir}/org/apache/xmlcommons" />
     <delete file="${src.dir}/manifest.commons" />
-         
+
   </target>
 
-  <target name="autojavadocs" 
+  <target name="autojavadocs"
           depends="autojavadocs-1.4-or-higher-if,autojavadocs-non1.4-or-higher-if">
     <echo message="autojavadocs is for automated build process, without dependencies"/>
   </target>
@@ -1056,18 +1056,18 @@
     </condition>
   </target>
 
-  <target name="autojavadocs-1.4-or-higher-if" if="using-java-1.4-or-higher" 
+  <target name="autojavadocs-1.4-or-higher-if" if="using-java-1.4-or-higher"
           depends="check-using-java-1.4-or-higher">
     <antcall target="autojavadocs-1.4-or-higher"/>
   </target>
 
-  <target name="autojavadocs-non1.4-or-higher-if" unless="using-java-1.4-or-higher" 
+  <target name="autojavadocs-non1.4-or-higher-if" unless="using-java-1.4-or-higher"
           depends="check-using-java-1.4-or-higher">
     <antcall target="autojavadocs-non1.4-or-higher"/>
   </target>
 
   <target name="autojavadocs-1.4-or-higher">
-    
+
     <!-- Ant ignores destdir arg if doclet is set, so must send to doclet in doclet subelement-->
     <javadoc
          additionalparam="-breakiterator"
@@ -1079,7 +1079,7 @@
          author="true"
          version="true"
          use="true"
-         windowtitle="${Name-in-docs} ${impl.version}" 
+         windowtitle="${Name-in-docs} ${impl.version}"
          doctitle="${Name-in-docs} ${impl.version}"
          bottom="Copyright &#169; ${year} Apache XML Project. All Rights Reserved.">
           <classpath refid="docs.class.path" />
@@ -1089,7 +1089,7 @@
           <group title="Xalan Core"
                  packages="org.apache.xalan.processor:org.apache.xalan.templates:org.apache.xalan.transformer"/>
           <group title="XPath" packages="org.apache.xpath*"/>
-          <group title="Document Table Model (DTM)" packages="org.apache.xml.dtm*"/>          
+          <group title="Document Table Model (DTM)" packages="org.apache.xml.dtm*"/>
           <group title="Utilities" packages="org.apache.xml.utils*"/>
           <group title="Xalan Other" packages="org.apache.xalan.client:org:org.apache.xalan.extensions:org.apache.xalan.res:org.apache.xalan.stree:org.apache.xalan.trace:org.apache.xalan.xslt"/>
           <group title="Xalan Extensions" packages="org.apache.xalan.lib*"/>
@@ -1102,7 +1102,7 @@
   </target>
 
   <target name="autojavadocs-non1.4-or-higher">
-      
+
     <!-- Ant ignores destdir arg if doclet is set, so must send to doclet in doclet subelement-->
     <javadoc
          public="true"
@@ -1112,7 +1112,7 @@
          author="true"
          version="true"
          use="true"
-         windowtitle="${Name-in-docs} ${impl.version}" 
+         windowtitle="${Name-in-docs} ${impl.version}"
          doctitle="${Name-in-docs} ${impl.version}"
          bottom="Copyright &#169; ${year} Apache XML Project. All Rights Reserved.">
           <classpath refid="docs.class.path" />
@@ -1124,7 +1124,7 @@
           <group title="Xalan Core"
                  packages="org.apache.xalan.processor:org.apache.xalan.templates:org.apache.xalan.transformer"/>
           <group title="XPath" packages="org.apache.xpath*"/>
-          <group title="Document Table Model (DTM)" packages="org.apache.xml.dtm*"/>          
+          <group title="Document Table Model (DTM)" packages="org.apache.xml.dtm*"/>
           <group title="Utilities" packages="org.apache.xml.utils*"/>
           <group title="Xalan Other" packages="org.apache.xalan.client:org:org.apache.xalan.extensions:org.apache.xalan.res:org.apache.xalan.stree:org.apache.xalan.trace:org.apache.xalan.xslt"/>
           <group title="Xalan Extensions" packages="org.apache.xalan.lib*"/>
@@ -1148,7 +1148,7 @@
     description="Clean the ${build.dir} tree and doc outputs" >
     <delete dir="${build.dir}"/>
     <delete dir="${site.root}"/>
-    <delete dir="${xalan.apache.org.site.root}"/>    
+    <delete dir="${xalan.apache.org.site.root}"/>
     <delete quiet="true">
       <fileset dir="${xdocs.style}" excludes="${xalanonly-styledocs}"/>
     </delete>
@@ -1157,15 +1157,15 @@
     <delete file="${src.dir}/${xalan.reldir}/Version.java"/>
     <delete file="${src.dir}/${serializer.reldir}/Version.java"/>
     <delete file="${src.dir}/${xalan.reldir}/processor/XSLProcessorVersion.java"/>
-    <delete file="${xdocs.dir}/sources/entities.ent"/>       
+    <delete file="${xdocs.dir}/sources/entities.ent"/>
     <!-- Also delete files expanded from ${xml-commons-srcs.tar.gz}-->
     <delete dir="${src.dir}/javax" includeEmptyDirs="true" quiet="true"/>
     <delete dir="${src.dir}/org/xml" includeEmptyDirs="true" quiet="true"/>
     <delete dir="${src.dir}/org/w3c" includeEmptyDirs="true" quiet="true"/>
     <delete dir="${src.dir}/xdocs/style/graphics" includeEmptyDirs="true" quiet="true"/>
-    <delete dir="${src.dir}/xdocs/style/resources" includeEmptyDirs="true" quiet="true"/>    
+    <delete dir="${src.dir}/xdocs/style/resources" includeEmptyDirs="true" quiet="true"/>
   </target>
- 
+
   <target name="xsltc.clean"
     description="Clean miscellaneous generated sources from xsltc.compile" >
     <delete file="${generated.xpathparser}" />
@@ -1209,12 +1209,12 @@
                        all components.">
     <echo message="fulldist is human-useable target for distribution, with all dependencies"/>
   </target>
-  
+
   <target name="fulldist-nodocs" depends="build.nonstd.dist-nodocs,autodist-nodocs"
           description="Create a .zip/.tar.gz distribution module containing
                        all components.">
     <echo message="fulldist-nodocs is human-useable target for distribution, with all dependencies and no documentation"/>
-  </target>  
+  </target>
 
   <!-- =================================================================== -->
   <!-- Creates a complete distribution with separate xalan.jar and         -->
@@ -1231,21 +1231,21 @@
                        all components.">
     <echo message="fulldist-separatejars-nodocs is human-useable target for distribution, with all dependencies and no documentation"/>
   </target>
-  
+
   <target name="build.std.dist" depends="build.std.parts">
     <property name="has.nonstd.parts" value="false"/>
   </target>
   <target name="build.std.dist-nodocs" depends="build.std.parts-nodocs">
     <property name="has.nonstd.parts" value="false"/>
-  </target>  
+  </target>
 
   <target name="build.nonstd.dist" depends="build.std.parts,build.nonstd.parts">
     <property name="has.nonstd.parts" value="true"/>
   </target>
   <target name="build.nonstd.dist-nodocs" depends="build.std.parts-nodocs,build.nonstd.parts">
     <property name="has.nonstd.parts" value="true"/>
-  </target>  
-  
+  </target>
+
   <target name="build.nonstd-separatejars.dist" depends="build.std-separatejars.parts,
                                                          build.nonstd-separatejars.parts">
     <property name="has.nonstd.parts" value="true"/>
@@ -1257,32 +1257,32 @@
 
   <target name="build.std.parts"
           depends="jar,docs,javadocs,samples,extra.std.samples,xsltc.docs"/>
-          
+
   <target name="build.std.parts-nodocs"
-          depends="jar,samples,extra.std.samples"/>          
-          
+          depends="jar,samples,extra.std.samples"/>
+
   <target name="build.std-separatejars.parts"
           depends="xalan-interpretive.jar,xsltc.jar,
                    docs.nojardepends,javadocs.nojardepends,
                    samples.nojardepends,extra.std.samples.nojardepends,
                    xsltc.docs"/>
-                    
+
   <target name="build.std-separatejars.parts-nodocs"
           depends="xalan-interpretive.jar,xsltc.jar,
-                   samples.nojardepends,extra.std.samples.nojardepends"/>                            
-          
+                   samples.nojardepends,extra.std.samples.nojardepends"/>
+
   <target name="build.nonstd.parts" depends="extra.nonstd.samples"/>
   <target name="build.nonstd-separatejars.parts" depends="extra.nonstd.samples.nojardepends"/>
 
   <!-- =================================================================== -->
   <!-- Autodist targets.  Used by the distribution targets.                -->
-  <!-- =================================================================== -->  
+  <!-- =================================================================== -->
   <target name="autodist-mkdirs">
     <mkdir dir="${dist.dir}"/>
-    <mkdir dir="${dist.dir}/lib"/>   
-    <mkdir dir="${dist.dir}/samples"/>       
+    <mkdir dir="${dist.dir}/lib"/>
+    <mkdir dir="${dist.dir}/samples"/>
     <mkdir dir="${dist.dir}/src"/>
-    <mkdir dir="${dist.dir}/tools"/>     
+    <mkdir dir="${dist.dir}/tools"/>
     <mkdir dir="${dist.dir}/xdocs"/>
   </target>
 
@@ -1312,20 +1312,20 @@
     <copy todir="${dist.dir}/samples">
       <fileset dir="${samples.dir}"/>
     </copy>
-    
-    <!-- Copy tools; used for source distribution -->    
+
+    <!-- Copy tools; used for source distribution -->
     <copy todir="${dist.dir}/tools">
       <fileset dir="${tools.dir}">
         <include name="*.*"/>
       </fileset>
     </copy>
 
-    <!-- Copy runtime libs; used for source distribution -->    
+    <!-- Copy runtime libs; used for source distribution -->
     <copy todir="${dist.dir}/lib">
       <fileset dir="${lib.dir}">
         <include name="*.*"/>
       </fileset>
-    </copy>    
+    </copy>
 
     <!-- Copy built jars -->
     <copy file="${build.dir}/xalansamples.jar" todir="${dist.dir}/samples"/>
@@ -1335,21 +1335,21 @@
           failonerror="${has.nonstd.parts}"/>
     <copy file="${build.dir}/xsltcejb.jar"     todir="${dist.dir}/samples"/>
     <copy file="${build.dir}/xsltcservlet.jar" todir="${dist.dir}/samples"/>
-    
+
     <copy file="${build.xalan.jar}" todir="${dist.dir}" />
-    
+
     <!-- only copy the xsltc.jar file if it has been built -->
     <copy todir="${dist.dir}">
       <fileset dir="${build.dir}" includes="xsltc.jar"/>
     </copy>
     <copy file="${build.serializer.jar}" todir="${dist.dir}" />
-    
-    <copy file="${xmlapis.jar}" todir="${dist.dir}" />  
-    <copy file="${parser.jar}" todir="${dist.dir}" />        
+
+    <copy file="${xmlapis.jar}" todir="${dist.dir}" />
+    <copy file="${parser.jar}" todir="${dist.dir}" />
 
     <copy todir="${dist.dir}">
       <fileset dir="." includes="readme.html,KEYS,build.xml,build.sh,build.bat,commits.xml,
-                                 LICENSE.txt,NOTICE.txt"/>      
+                                 LICENSE.txt,NOTICE.txt"/>
     </copy>
   </target>
 
@@ -1425,19 +1425,19 @@
     <antcall target="autodist-create-bin-packages-nodocs"/>
     <antcall target="autodist-create-src-packages"/>
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Creates the documentation tree for the xml.apache.org/xalan-j       -->
   <!-- website                                                             -->
   <!-- =================================================================== -->
   <target name="site" depends="prepare.docs,javadocs,xsltc.docs"
     description="Build documentation for posting to the website" >
- 
+
     <mkdir dir="${site.dir}/apidocs"/>
     <mkdir dir="${site.dir}/design"/>
-    <mkdir dir="${site.dir}/xsltc"/>    
-    <java fork="yes" 
-          classname="${doc.generator}" 
+    <mkdir dir="${site.dir}/xsltc"/>
+    <java fork="yes"
+          classname="${doc.generator}"
           classpathref="docs.class.path" >
        <arg line="targetDirectory=${site.dir} ${site.book} ${xdocs.style}"/>
     </java>
@@ -1449,39 +1449,39 @@
     <!-- put xsltc design doc in the site xsltc subdir -->
     <copy todir="${site.dir}/xsltc">
       <fileset dir="${build.docs}/xsltc"/>
-    </copy>  
-    
+    </copy>
+
     <!-- put in the javadoc -->
     <copy todir="${site.dir}/apidocs">
       <fileset dir="${build.apidocs}"/>
-    </copy>      
+    </copy>
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Creates the documentation tree for the xalan.apache.org website     -->
   <!-- =================================================================== -->
   <target name="xalan.apache.org.site"
     description="Build documentation for posting to the website" >
- 
+
     <mkdir dir="${xalan.apache.org.site.dir}"/>
-    <java fork="yes" 
-          classname="${doc.generator}" 
+    <java fork="yes"
+          classname="${doc.generator}"
           classpathref="docs.class.path" >
        <arg line="targetDirectory=${xalan.apache.org.site.dir} ${xalan.apache.org.site.book} ${xdocs.style}"/>
     </java>
 
-  </target>  
-   
+  </target>
+
   <!-- =================================================================== -->
   <!-- Compiles and runs mini/smoketest from xml-xalan\test, if present    -->
   <!-- =================================================================== -->
   <property name="test.relpath" value="../test"/>
 
-  <target name="minitest" depends="prepare,minitest-run,tests-not-available" 
+  <target name="minitest" depends="prepare,minitest-run,tests-not-available"
     description="Run the Minitest from xml-xalan/test" >
-    <!-- This target simply asks the minitest-run worker target to 
+    <!-- This target simply asks the minitest-run worker target to
          actually have the Minitest run (by the test/build.xml file);
-         we then also call the tests-not-available target in case 
+         we then also call the tests-not-available target in case
          the user never checked out the tests.
     -->
   </target>
@@ -1491,7 +1491,7 @@
     </ant>
   </target>
 
-  <target name="smoketest" depends="prepare,smoketest-run,tests-not-available" 
+  <target name="smoketest" depends="prepare,smoketest-run,tests-not-available"
     description="Run Smoketests (Minitest, conf, harness) from xml-xalan/test" >
   </target>
   <target name="smoketest-run" if="tests-available" depends="jar" >
@@ -1516,14 +1516,14 @@
   <!-- Creates the xalan design document                                   -->
   <!-- =================================================================== -->
     <target name="xalan-j2-design">
-    <java fork="yes" 
-          classname="${doc.generator}" 
+    <java fork="yes"
+          classname="${doc.generator}"
           classpathref="docs.class.path" >
       <arg line="loaderConfig=sbk:/style/loaderdesign.xml targetDirectory=${build.dir}/docs/design/
       ${xdocs.dir}/sources/xalandesign.xml ${xdocs.style}"/>
     </java>
   </target>
-  
+
   <!-- =================================================================== -->
   <!-- Use FOP to create preliminary print (pdf) doc                       -->
   <!-- Note: fop.jar and xml.jar (from xml-fop) must be on classpath       -->
@@ -1532,34 +1532,34 @@
   <!--Collate the xml sources into a single xml source with a litle extra structure -->
   <target name="printerdocs" depends="prepare.docs">
     <echo message="NOTICE: requires fop.jar and xml.jar on the classpath"/>
-    <java fork="yes" 
+    <java fork="yes"
           classname="${xalan.cmdline.class}"
           classpathref="docs.class.path" >
-      <arg line="-xsl ${xdocs.dir}/sources/xalan-collate.xsl 
+      <arg line="-xsl ${xdocs.dir}/sources/xalan-collate.xsl
                  -out xdocs/sources/xalan/xalan-collate.xml"/>
     </java>
-    
-    <!-- Transform collation into Formatting Objects 
-         (with a little work on links along the way) -->    
-    <java fork="yes" 
+
+    <!-- Transform collation into Formatting Objects
+         (with a little work on links along the way) -->
+    <java fork="yes"
           classname="${xalan.cmdline.class}"
           classpathref="docs.class.path" >
       <arg line="-in  ${xdocs.dir}/sources/xalan/xalan-collate.xml
                  -param resourceFile '../../sources/xalan/resources.xml'
-                 -param project ${Name-in-docs}      
-                 -xsl ${xdocs.style}/stylesheets/xml2fo.xsl 
+                 -param project ${Name-in-docs}
+                 -xsl ${xdocs.style}/stylesheets/xml2fo.xsl
                  -out build/docs/xalan-collate.fo"/>
     </java>
-    
+
     <!-- Use FOP to generate a pdf file (classpath may need updating! -sc 18-Apr-01)-->
-    <java fork="yes" 
+    <java fork="yes"
           classname="org.apache.fop.apps.CommandLine"
       classpath="${java.class.path}:${build.xalan.jar}:${bin.dir}/fop.jar:${bin.dir}/w3c.jar">
       <arg line="${build.docs}/xalan-collate.fo build/docs/xalan.pdf"/>
     </java>
   </target>
 
- 
+
   <!-- =================================================================== -->
   <!-- Build XSLTC design documentation. Eventually intend to incorporate -->
   <!-- XSLTC into the Xalan book.                                         -->
@@ -1568,27 +1568,27 @@
 
   <target name="xsltc.prepare.docs" depends="prepare.docs.nojardepends">
    <mkdir dir="${build.docs}/xsltc"/>
-   <!--   
+   <!--
    <echo message="Transform xsltc_todo.xml and put the result in ${build.docs}/xsltc"/>
    <java fork="yes" classname="${xalan.cmdline.class}">
       <classpath refid="docs.class.path" />
       <arg line="-in xsltc_todo.xml -xsl todo.xsl -out build/docs/xsltc/todo.html"/>
    </java>  -->
-  </target>  
- 
+  </target>
+
  <target name="xsltc.docs" depends="xsltc.prepare.docs">
    <echo message="Build the XSLTC Architectural documentation"/>
-   <java fork="yes" 
-         classname="${doc.generator}" 
+   <java fork="yes"
+         classname="${doc.generator}"
          classpathref="docs.class.path" >
       <arg line="targetDirectory=${build.docs}/xsltc ${xdocs.dir}/sources/xsltc.xml ${xdocs.style}"/>
-    </java>	 
-    <copy todir="${build.docs}/xsltc" 
+    </java>
+    <copy todir="${build.docs}/xsltc"
 	file="${xdocs.dir}/sources/xsltc/README.xslt" />
-    <copy todir="${build.docs}/xsltc" 
+    <copy todir="${build.docs}/xsltc"
 	file="${xdocs.dir}/sources/xsltc/README.xsltc" />
  </target>
- 
+
    <!-- pack all doc for transfer to website -->
  <target name="pack.docs">
     <!--tar tarfile="./build/xalan-j-docs.tar" basedir="./xml-site/target/xalan-j" includes="**"/>
@@ -1605,8 +1605,8 @@
   <!-- either create new values, or copy, just in case we separate into      -->
   <!-- a totally new build.xml file                                          -->
   <property name="serializer.build.debug"   value="${build.debug}"            />
- 
-  
+
+
   <!-- PROPERTIES TO MAKE THE SOURCE DISTRIBUTION ========================== -->
   <property name="serializer.name"          value="serializer"                />
   <property name="serializer.version"       value="${version}"                />
@@ -1617,8 +1617,8 @@
   <patternset id="serializer-src-distro" >
     <!-- some license and legal stuff -->
     <include name="${serializer.dist.file}/LICENSE.txt"/>
-    <include name="${serializer.dist.file}/NOTICE.txt"/> 
-    <include name="${serializer.dist.file}/KEYS"/>  
+    <include name="${serializer.dist.file}/NOTICE.txt"/>
+    <include name="${serializer.dist.file}/KEYS"/>
 
     <!-- The build stuff that uses Ant and this file itself, build.xml
          this is getting into a strange loop but the source distribution
@@ -1639,7 +1639,7 @@
 
     <!-- The serializer needs this jar in order to build -->
     <include name="${serializer.dist.file}/xml-apis.jar"/>
-    
+
     <!-- Ant needs an XML parser in order to read in the build.xml, so it
          can even do the build ... this is a strange loop ... -->
     <include name="${serializer.dist.file}/xercesImpl.jar"/>
@@ -1652,10 +1652,10 @@
     <include name="${serializer.dist.file}/KEYS"/>
     <include name="${serializer.dist.file}/${serializer.name}.jar"/>
     <include name="${serializer.dist.file}/${xmlapis.jar.name}"/>
-    <include name="${serializer.dist.file}/${parser.jar.name}"/>    
+    <include name="${serializer.dist.file}/${parser.jar.name}"/>
   </patternset>
   -->
-  
+
   <!-- =================================================================== -->
   <!-- Creates the Serializer jar                                          -->
   <!-- =================================================================== -->
@@ -1686,7 +1686,7 @@
     <echo message="Compiling the Serializer" />
     <javac srcdir="${serializer.src.dir}"
            destdir="${serializer.build.classes}"
-           debug="${serializer.build.debug}" 
+           debug="${serializer.build.debug}"
     	   target="${compiler.target}" source="${compiler.source}">
       <include name="${serializer.reldir}/**/*.java" />
       <classpath refid="compile.class.path" />
@@ -1705,30 +1705,30 @@
   <!-- =================================================================== -->
   <target name="serializer.javadocs"
     description="Build the Javadocs for the Serializer" >
-    <echo message="javadocs is human-usable target with dependencies"/>  
-    
-    <mkdir dir="${build.docs}"/> 
+    <echo message="javadocs is human-usable target with dependencies"/>
+
+    <mkdir dir="${build.docs}"/>
     <mkdir dir="${build.apidocs}"/>
     <antcall target="serializer.autojavadocs"/>
   </target>
 
-  <target name="serializer.autojavadocs" 
+  <target name="serializer.autojavadocs"
           depends="serializer.autojavadocs-1.4-or-higher-if,serializer.autojavadocs-non1.4-or-higher-if">
     <echo message="serializer.autojavadocs is for automated build process, without dependencies"/>
   </target>
 
-  <target name="serializer.autojavadocs-1.4-or-higher-if" if="using-java-1.4-or-higher" 
+  <target name="serializer.autojavadocs-1.4-or-higher-if" if="using-java-1.4-or-higher"
           depends="check-using-java-1.4-or-higher">
     <antcall target="serializer.autojavadocs-1.4-or-higher"/>
   </target>
 
-  <target name="serializer.autojavadocs-non1.4-or-higher-if" unless="using-java-1.4-or-higher" 
+  <target name="serializer.autojavadocs-non1.4-or-higher-if" unless="using-java-1.4-or-higher"
           depends="check-using-java-1.4-or-higher">
     <antcall target="serializer.autojavadocs-non1.4-or-higher"/>
   </target>
 
   <target name="serializer.autojavadocs-1.4-or-higher">
-    
+
     <!-- Ant ignores destdir arg if doclet is set, so must send to doclet in doclet subelement-->
     <javadoc
          additionalparam="-breakiterator"
@@ -1739,7 +1739,7 @@
          author="true"
          version="true"
          use="true"
-         windowtitle="${Name-in-docs} Serializer ${impl.version}" 
+         windowtitle="${Name-in-docs} Serializer ${impl.version}"
          doctitle="${Name-in-docs} Serializer ${impl.version}"
          bottom="Copyright &#169; ${year} Apache XML Project. All Rights Reserved.">
           <classpath refid="docs.class.path" />
@@ -1757,7 +1757,7 @@
          author="true"
          version="true"
          use="true"
-         windowtitle="${Name-in-docs} Serializer ${impl.version}" 
+         windowtitle="${Name-in-docs} Serializer ${impl.version}"
          doctitle="${Name-in-docs} Serializer ${impl.version}"
          bottom="Copyright &#169; ${year} Apache XML Project. All Rights Reserved.">
           <classpath refid="docs.class.path" />
@@ -1783,9 +1783,9 @@
 
   <target name="serializer-autodist-mkdirs">
     <echo message="Serializer: making distribution directories" />
-    <mkdir dir="${serializer.dist.dir}"/> 
+    <mkdir dir="${serializer.dist.dir}"/>
     <mkdir dir="${serializer.dist.dir}/src"/>
-    <mkdir dir="${serializer.dist.dir}/tools"/>      
+    <mkdir dir="${serializer.dist.dir}/tools"/>
   </target>
 
   <target name="serializer-autodist-copy-files">
@@ -1806,21 +1806,21 @@
 
     <!-- Copy built jars -->
     <copy file="${build.serializer.jar}" todir="${serializer.dist.dir}" />
-    
-    <!-- Copy runtime jars -->    
+
+    <!-- Copy runtime jars -->
     <copy file="${lib.dir}/${xmlapis.jar.name}" todir="${serializer.dist.dir}" />
     <copy file="${lib.dir}/${parser.jar.name}" todir="${serializer.dist.dir}" />
 
     <!-- Copy licenses -->
     <copy todir="${serializer.dist.dir}">
-      <fileset dir="." 
+      <fileset dir="."
                includes="LICENSE.txt,NOTICE.txt"/>
     </copy>
 
     <!-- Copy tools -->
     <copy todir="${serializer.dist.dir}/tools">
       <fileset dir="./tools" includes="ant*"/>
-    </copy>    
+    </copy>
 
     <copy todir="${serializer.dist.dir}">
       <fileset dir="." includes="KEYS,build.xml,build.sh,build.bat"/>
@@ -1833,10 +1833,10 @@
         <patternset refid="serializer-bin-distro"/>
       </tarfileset>
     </tar>
-    <gzip src="${serializer.build.dir}/${serializer.dist.file}-bin.tar" 
+    <gzip src="${serializer.build.dir}/${serializer.dist.file}-bin.tar"
       zipfile="${serializer.build.dir}/${serializer.dist.file}-bin.tar.gz"/>
 
-    <!--  
+    <!--
     <delete file="${serializer.build.dir}/${serializer.dist.file}-bin.tar" />
       -->
 
